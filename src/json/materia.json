{
    "herramienta": [
        {
            "id": "1",
            "name": "Css",
            "html": {
                "p1": {
                    "id": "1",
                    "tag": [
                        "1,2,3,4"
                    ],
                    "name": "inicio",
                    "cont": "<div class='img-principal'><img src='https://www.solucionex.com/sites/default/files/posts/imagen/css_blog.png' alt='logo css'></div><h3>Se le puede dar un background a todo, incluso a las etiquetas P</h3><p> se puede añadir un css externo con la etiqueta link: link rel='stylesheet' href='index.css'</p><p>existe unidades de medida como <i>px, pt, pc, cm, mm, inches, em y ex</i></p><section class='sub-cont'>    <div class='select'>        <p><em>La etiqueta em sirve para letras cursivas</em></p>    </div>    <div class='desc'>        <h3>Descendientes de selectores</h3>        <p>En el ejemplo, se seleccionó la clase .desc, luego la etiqueta p y despues em</p>        <p>por ejemplo: <strong> .desc p em{ color:pink; background-color:gray; }</strong></p>        <p>Son para seleccionar <em>un elemento dentro de otro</em></p>    </div></section>"
                },
                "p2": {
                    "id": "2",
                    "name": "Texto",
                    "cont": "<h3>Font-Family</h3><p>Se coloca una coma para agregar otra fuente como alternativa.</p> <p>A las fuentes que contengan más de una palabra, se les agrega ''</p><p>Ejemplo: <strong>p.serif{font-family:Helvetica,Arial, sans-serif;}</strong></p><h4>Font-Size</h4><p>Una forma de establecer el tamaño es con las palabras clave:</p><p>xx-small, small, medium, large, larger, etc.. </p><p>ejemplo: <strong>font-size:x-large</strong></p><p>también puede ser en pixeles o en em</p><p><em>1em=16px</em></p><h4>Font-style</h4><p>se usa para dar estilo a las letras, como por ejemplo cursiva</p><p>existe, normal, italic y oblique</p><p><i> se puede lograr lo mismo con la etiqueta <strong> i </i></strong></i></p><h4>Font-weight</h4><p>se usa para controlar el espesor o grosor del texto</p><p>tenemos lighter, bold y bolder</p><p>ej <strong>font-weight:bold;</strong></p><p>salida: <em style='font-weight: bold;'>texto con bold</em> <em>texto sin bold</em></p><p><i>se puede lograr lo mismo con números del 100 al 900.</i></p><h4>Font-variant</h4><p>Permite usar 'pequeñas mayusculas'</p><p>ej: <strong>font-variant:small-caps;</strong></p><p>salida: <em style='font-variant: small-caps;'>también existe 'normal'</em></p><p><i>No todas las fuentes lo soportan, validar antes de usar</i></p><h4>Text-align</h4><p>el texto se puede centrar horizontalmente:</p><p>left, right, center y justify</p><p style='text-align: right;'>básicamente funciona igual que word</p><h4>Vertical-align</h4><p>el texto se puede centrar verticalmente:</p><p>top, middle, bottom</p><p>código: <strong>vertical-align:bottom</strong></p><p>también toma los valores baseline, sub, super, % y px(pt o cm).</p><p>la diferencia está en que los primeros se situan a los extremos del espacio y el segundosolo es un pocomás arriba o más abajo según decida.</p><h4>Para que funcione en otros elementos...</h4><p>Para que funcione en otros elementos debemos aplicar un formateo.</p><p>para el elemento donde se situará(el div o section, etc...), necesitará<strong>display:inline-table</strong></p><p>y despues ya podemos usar en el elemento el vertical-align asignando</p><p><strong>display: table-cell; vertical-align: middle;</strong></p><h4>text-decoration</h4><p>...</p><h4>Text-indent</h4><p>Sirve como sangria, tiene 2 valores, lenght o inherit</p><p>código <strong>text-indent: 60px</strong></p>  <h4>Text-shadow</h4><p>Tiene 4 valores, el primero define la distancia horizontal, el segundodefine el valor vertical, el tercero el desenfoque y el ultimo el color.</p><p>código: <strong>text-shadow: 5px 2px 4px teal;</strong></p><p>salida: <span style='text-shadow:5px 2px 4px teal;'>texto sombreado</span></p><h4>text-transform</h4><p>Se usa como por ejemplo, para capitalizar el texto</p><p>código: <strong>text-transform:capitalize;</strong></p><p>también se puede pasar todo a mayusculas o minusculas con <em>uppercase</em> o<em>lowecase</em></p><h4>letter-spacing</h4><p>define el espacio entre las letras</p><p>código: <strong>letter-spacing: 10px;</strong></p><p>salida: <em style='letter-spacing: 10px;'>texto espaciado</em></p><p><i>se puede usar también valores negativos</i></p><h4>word-spacing</h4><p>funciona como letter-spacing pero separa las palabras</p><p>código: <strong>word-spacing: 30px;</strong></p><h4>Saltos de linea</h4><p>white-space</p><p>podemos juntar todo el texto en una sola linea con <strong>nowrap</strong></p><p><strong>pre:</strong> se ajustará a saltos de linea y espacios.</p><p><strong>pre-line:</strong>sólo toma en cuenta los saltos de linea</p><p><strong>pre-wrap:</strong>se ajusta en saltos de linea y cuando sea necesario</p><p>código: <strong>white-space:pre-wrap;</strong></p><p>salida: <em style='white-space:pre-wrap;'>esto funcionamuybien</em></p><hr><h4>Break-wrap</h4><p>rompe palabras largas y las continua en la siguiente linea si se cambia de normal abreak-word</p><p><strong>word-wrap:normal;</strong></p>"
                },
                "p3": {
                    "id": "3",
                    "name": "Posicionamiento e imagen",
                    "cont": "<h1>Posicionamiento e imagen...</h1><section><div class='desc'><br><h4>Bordes</h4><p>se especifica el tamaño, estilo y color del borde con: </p><p><strong>border: 5px solid green;</strong></p><p>todos los elementos se pueden definir por separado.</p><h4>ESTILOS DE BORDES</h4><p><strong>dotted, dashed, double, groove, ridge, inset, outset, hidden;</strong></p><p><i> se puede colocar borde en cualquier lado, derecha, izquierda, etc... ej: border-top;</i></p><br></div><div class='desc'><h4>MAX-MIN</h4><p>se puede controlar el alto y ancho máximo de un elementolas propiedades son:<em>min-width, min-height, max-width, min-height</em></p><p><i>se puede usar para hacer responsive</i></p></div><div class='desc'><h4>background-image</h4><p>código: <strong>background-image:url('imagen.jpg');</strong></p><h3>elemento h3 con background-image</h3><h4>background-repeat</h4><p>la imagen puede repetirse en ambas direcciones o no repetirse.</p><p>valores:<strong>background-repeat: repeat-x;</strong><strong>background-repeat: repeat-y;</strong><strong>background-repeat: no repeat;</strong></p><h4>background-attachment:fixed o scroll</h4><p>En fixed, la imagen no se mueve con la páginaen scroll, se moverá.</p><h4>Posición</h4><p>Para especificar la posicion de la imagen</p><p><strong>background-position: 50% 50%;</strong></p><h4>tamaño</h4><p>especificar el tamaño</p><p><strong>background-size: cover; o contain</strong></p><br></div><p></p></section>"
                },
                "p4": {
                    "id": "4",
                    "name": "Listas",
                    "cont": "<h1>Listas...</h1><div class='desc'><h4>Estilo de listas</h4><p>al 'ul' se le asigna el valor, existe:</p><p>lower-alpha, circle, square.</p><p>código: <strong>list-style-type:lower-alpha;</strong></p><p>salida:</p><ul style='list-style-type:lower-alpha;'><li>1</li><li>2</li><li>3</li></ul><h4>image y position</h4><p><strong>list-style-image</strong></p><p><strong>list-style-position</strong></p><p>se usan para definir una imagen y Posicion a la lista</p><p>ej:</p><ul class='ul-img'><li>objeto 1</li><li>objeto 2</li><li>objeto 3</li></ul><p><i>la Posicion puede ser outside o inside</i></p><br></div><div class='desc'><h4>bordes de la tabla</h4><p>código: <strong>border-collapse: separate</strong></p><p><strong>border-spacing</strong></p><h4>caption es la leyenda o titulo de la tabla</h4><p>Caption-side, define en qué parte irá</p><h4>Celdas vacías</h4><p>con <strong>empty-cells</strong> se define si mostrar o nocuando hay una celda vacía</p><p>valores: <strong>hide, show.</strong></p><h4>Propiedad table-layout</h4><p>Para definir el tamaño de la celda según su contenido o no</p><p>puede ser <strong>fixed o auto</strong></p></div>"
                },
                "p5": {
                    "id": "5",
                    "name": "Links",
                    "cont": "<h1>Links...</h1><section><div class='desc'><h4>Para quitar la decoración de links</h4><p>código <strong>a:link{ text-decoration: none}</strong></p><p>quitar bordes: <strong>border:none;</strong></p><p>quitar borde punteado: <strong>outline:none;</strong></p></div></section>"
                },
                "p6": {
                    "id": "6",
                    "name": "Cursor",
                    "cont": "<h1>Cursor...</h1><section><div class='desc'><h4>Cambiar el cursor</h4><p>código: <strong style='cursor:help;'>style='cursor:help;'</strong></p><p>el código en negro tiene cursor help al pasar por encima.</p><p>hay muchos valores así que no serán anotados aquí.</p></div></section>"
                },
                "p7": {
                    "id": "7",
                    "name": "Diseño y posición",
                    "cont": "<h1>Diseño y posición</h1><section><div class='desc'><h4>display: block</h4><p>Hace que los objetos se comporten como un bloque.</p><h4>display: inline</h4><p>El espacio que ocupa es en línea.</p><h4>display: none</h4><p>El objeto desaparece como si no existiera</p><p><i>propiedad destacada.</i></p><hr><h4>display: flex</h4><p>Util para crear elemento row.</p><div style='display: flex'><div class='marca'><p>a|</p><p>w|</p></div><div class='marca'><p>o|</p><p>w|</p></div></div><hr><h4>Float</h4><p>empuja <i>un elemento</i> a la izquierda o derecha.</p><p>código <strong>float:left; o right</strong></p></div></section>"
                },
                "p8": {
                    "id": "8",
                    "name": "comportamiento de pos",
                    "cont": "<h1>comportamiento de pos</h1><section><div class='desc'><h4>Overflow</h4><p>Overflow especifica el comportamiento cuanto hay undesborde en alguna parte.</p><p>existe: scroll,hidden y auto</p><p>scroll agrega barra de desplazamiento.auto: agrega scroll.hidden:esconde el contenido desbordado.visible: se verá todo.</p><h4>z-index</h4><p>Apila los elementos de acuerdo a qué número es mayor</p><p>código: <strong>z-index: 3</strong></p><p>el elemento que debe estar abajo, debe tener un número menor.</p></div></section>"
                },
                "p9": {
                    "id": "9",
                    "name": "Prefijos de provedores Css",
                    "cont": "<section><div class='desc'><h4>Prefijos de provedores Css</h4><p> el prefijo <em>-webkit-</em> se usa para que las propiedades sean soportados por otrosnavegadores</p><p>ej: <strong>-webkit-border-radius:24px;</strong></p><p>así será soportado por navegadores como explorer, safari..etc</p><p><i>cada navegador tiene su propio prefijo.</i></p><h4>Sombras internas</h4><p>para crear una sombra interna, basta con agregar inset</p><p>código: <strong>box-shadow: inset 10px 10px 5px red;</strong></p><div style='box-shadow: inset 0px 20px 20px 5px  red; height: 50px;'><p>caja con sombra dentro</p></div><h4>transparencia</h4><p>código:</p><p><strong>background: linear-gradient(90deg,rgba(255,255,255,0) 0%,rgba(255,255,255,0.2) 25%,rgba(255,255,255,0.2) 75%,rgba(255,255,255,0) 100%;box-shadow: 0 0 25px rgba(0,0,0,0.1),inset 0 0 1px rgba(255,255,255,0.6); </strong></p><div class='tra' style='text-align: center;'>caja trans</div></div></section>"
                },
                "p10": {
                    "id": "10",
                    "name": "pseudoclases",
                    "cont": "<h1>pseudoclases Css3</h1><section><div class='desc'><p>Las pseudoclases se usan para dar estilo a elementos o partede los elementos </p><p>comienzan con : (dos puntos)</p><p>los más comunes de usar son :first-child y :last-child</p><p>se aplica a los elementos hijos del elemento al que fué aplicado</p><p>codigo ejemplo: <strong>.parent p:first-child{color: red;}</strong></p><div class='parent' style='border: 1px dotted salmon; width: max-content;'><p>hola1</p><p>hola2</p><p>hola3</p></div><hr><h4>PseudoElementos</h4><p>Seleccionan partes especificas de un elemento</p><p>hay 5 y comienzan con dos puntos dobles (: :)</p><p>: :first-line=la primera linea del texto.: :first-letter=primera letra.: :selection=la porcion de elemento seleccionado por el usuario.: :before=inserta contenido anters de un elemento: :after=inserta después</p><h4>Trabajando con pseudoclases</h4><p>: :selection: sirve para colorear el texto seleccionado como ejemplo</p><div class='caja-strong'><p>p: :selection{background: rgb(0,0,0);color: rgb(116,0,0);}</p></div><p>: :before= en el ejemplo se usa para agregar una imagen antes del texto, observar<em>content</em></p><div class='caja-strong'><p>p: :before{content: url('logo.jpg');}</p></div><hr><h4>@font-face</h4><p>se puede usar fuentes personalizadas. se pueden descargar y personalizar</p><p>se crea una clase con el name de la nueva fuente</p><p>ej:</p><div class='caja-strong'><p>@font-face{font-family:Delicius;font-weight: bold;src: url(Delicius-bold.otf);}</p></div></div></section>"
                },
                "p11": {
                    "id": "11",
                    "name": "Degradados",
                    "cont": "<h1>Degradados</h1><section><div class='desc'><h4>Degradado lineal</h4><p>código: <strong> linear-gradient(red, rgb(199,115,115))</strong></p><p>salida:</p><div class='degradado' style='background: linear-gradient(red, rgb(0, 255, 34));'><p>background: linear-gradient(red, rgb(0,255,34));</p></div><hr><h4>Paradas de colores</h4><p>solo se agregan más colores separados de una coma</p><p>ej:</p><div class='degradado' style='background: linear-gradient(red, green, white);'><p>background: linear-gradient(red, green, white);</p></div><p>Las separaciones pueden definirse en porcentajes. ej:</p><p><strong>'background: linear-gradient(red 20%, green 5%, white 12%);</strong></p><p>Se puede definir la direccion del degradado</p><p>0deg es un degradado de izquierda a derecha</p><p>90deg crea de abajo hacia arriba</p><p><strong>' background:linear-gradient(100deg, blue,green,white);</strong></p><div class='degradado deg2 '>                            <p> background:linear-gradient(100deg, blue...</p></div><p>también se puede repetir el degradado con:</p><p>repeating-linear-gradient.</p><h4>Degradado radial</h4><p>código <strong>radial-gradient(circle, green, yellow,blue);</strong></p><div class='degradado' style='background: radial-gradient(circle, green, yellow,blue);;'><p> background:linear-gradient(100deg, blue...</p></div><h4>background-clip</h4><p>existe:</p><p>border-box, padding-box, content-box</p><p>ej: <strong>background-clip: content-box</strong></p><divstyle='background-image:url('https://img.freepik.com/vector-gratis/fondo-acuarela_220290-34.jpg?size=626&ext=jpg') ; background-clip:content-box ; border: 20px dotted rgba(0, 255, 34, 0.13);'><p> background-clip</p></div><h4>Bordes tranparentes.</h4><p>-el ejemplo anterior contiene bordes transparentes</p><p>-se agrega con rgb</p><p>-es importante que contenga <strong>background-clip:padding-box;</strong> </p><p><strong>border: 20px dotted rgba(0,255,34,0.13);</strong></p><h4>Multiples fondos</h4><p>sólo se necesita separar por comas</p><p><strong>background: url(algo) right top, url(otra-imagen) left top</strong></p><h4>OPACITY</h4><p><strong>opacity: 0.3;</strong></p><br><br><br><br></div></section>"
                },
                "p12": {
                    "id": "12",
                    "name": "Transiciones",
                    "cont": "<h1>Transiciones</h1><section><div class='desc'><h4>Propiedad transicion.</h4><p><strong>transition: width 3s;</strong></p><div class='hola'><p> background-clip</p></div>                        <p>Se crea la propiedad agregando la propiedad y los segundos en la que va cambiar</p>                        <p>a la propiedad se le agrego 'width' indicando que eso es lo que cambiará y en 3 segundos</p></div></section>"
                },
                "p13": {
                    "id": "13",
                    "name": "Otras propiedades",
                    "cont": "<h1>Otras propiedades</h1>                <section>                    <div class='desc'>                        <h4>drop-filter</h4>                        <p>Se puede hacer con esto los fondos difuminados, el que más uso: drop-filter:blur(2px);</p>                    </div>                </section>"
                },
                "p14": {
                    "id": "14",
                    "name": "Herramientas",
                    "cont": "<h1>Herramientas</h1><section>    <div class='desc'>        <br>        <h4>aos</h4>        <p>herramienta para animaciones, visitar página →<a                href='https://michalsnik.github.io/aos/'>https://michalsnik.github.io/aos/</a></p>        <a class='descargar' href='../download/bulma.rar' download target='_blank'><img                src='https://www.bram.us/wordpress/wp-content/uploads/2016/08/68747470733a2f2f7333322e706f7374696d672e6f72672f6b7476743539686f6c2f616f735f6865616465722e706e67.png'                alt=''> Descargar</a>        <hr>        <h4>Bulma</h4>        <p>framework para maquetado, visitar página → <a                href='https://bulma.io/'>https://bulma.io/</a></p>        <a class='descargar' href='../download/bulma.rar'><img                src='https://bulma.io/images/bulma-logo.png' alt=''> Descargar</a>        <hr>        <h4>Bootstrap</h4>        <p>framework para maquetado, visitar página →<a                href='https://getbootstrap.com/'>https://getbootstrap.com/</a></p>        <a href='' class='descargar'><img                src='https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/Bootstrap_logo.svg/1200px-Bootstrap_logo.svg.png'                alt=''>Descargar</a>        <hr>        <h4>Fontello</h4>        <p>generador de iconos personalizables y descargables, visitar página →<a                href='http://fontello.com/'>http://fontello.com/</a></p>        <hr>        <h4>Jquery</h4>        <p>Libreria Javascript, visitar página <a href='https://jquery.com/'>https://jquery.com/</a>        </p>        <a href='../download/jquery-3.5.1.min.rar' class='descargar'><img                src='https://blog.artegrafico.net/wp-content/uploads/2019/02/jQuery-logo.png'                alt=''> Descargar</a>        <br>        <br>    </div></section>"
                },
                "p15": {
                    "id": "15",
                    "name": "Scroll",
                    "cont": "<h1>Scroll</h1><section>    <div class='desc'>        <h4>modificar el scroll</h4>        <br>        <p>Sólo copia y pega el texto en css y luego asigna la clase scrol al elemento que quieres            que tenga el scroll <br> no olvidar que el overflow:scroll; es importante que esté            presente en el elemento</p><br>        <textarea cols='30' rows='10'>              .scrol {}.scrol: :-webkit-scrollbar {-webkit-appearance: none;                }.scrol: :-webkit-scrollbar:vertical {width: 10px;                }.scrol: :-webkit-scrollbar-button:increment, .contenedor: :-webkit-scrollbar-button {display: none;                }.scrol: :-webkit-scrollbar:horizontal {height: 10px;                }.scrol: :-webkit-scrollbar-thumb {background-color: #00b5fc4b;border-radius: 20px;border: 2px solid #00b5fc52;                }.scrol: :-webkit-scrollbar-thumb:hover {background-color: #ffffff4b;border: 2px solid #ffffff52;                }.scrol: :-webkit-scrollbar-track {border-radius: 10px;background-color: black;                }                /*SCROLL FIN*/        </textarea>        <a href='../pdf/scroll.pdf'>→ pdf con más info de estructura</a>    </div></section>"
                },
                "p16": {
                    "id": "16",
                    "name": "Menu burger",
                    "cont": "<h1>Menu burger</h1>                    <section>                        <div class='desc'>                            <h4>agregar menu burguer</h4>                            <p>menu burger junto con el icono</p>                            <br>                            <p><strong>el CSS</strong></p>                            <textarea cols='30' rows='10'>/*MENU BURGER*/.sidebar {    position: fixed;    height: 400px;    width: 250px;    margin-right: -5px;    margin-top: 10px;    top: 0;    right: 0;    z-index: 100;    background-color: #ffffff;    border: 1px solid black;    border-radius: 25px;    box-shadow: 0 0 5px black;    overflow-x: hidden;    transition: 0.4s;    padding: 1rem 0;    box-sizing: border-box;                }.sidebar .boton-cerrar {    position: absolute;    top: 0.5rem;    right: 1rem;    font-size: 2rem;    display: block;    padding: 0;    line-height: 1.5rem;    margin: 0;    height: 32px;    width: 32px;    text-align: center;                }.sidebar ul, .sidebar li {    margin: 0;    padding: 0;    list-style: none inside;                }.sidebar ul {    margin: 4rem auto;    display: block;    width: 80%;    min-width: 200px;                }.sidebar a {    display: block;    font-size: 120%;    color: black;    text-decoration: none;                }.sidebar a:hover {}#abrir {    position: absolute;    top: 0;    right: 0;                }#cerrar {    display: none;    color: rgba(255,                    235,                    205,                    0);    font-size: 0px;                }                /*FIN BURGUER MENU*/.menu-g {    width: 90%;    height: auto;    background-color: rgb(255,                    255,                    255);    margin-left: auto;    margin-right: auto;    margin-top: -30px;                }.menu-g .columns {    width: 100%;    height: auto;    margin: 0px;    text-align: center;    display: block;                }.menu-g .column {    height: 100px;    border-bottom: 0px solid #409FA2;                }.menu-g h1 {    color: rgb(0,                    0,                    0);    font-size: 20px;    text-align: center;    font-family: reg-monse;                }.burger {    float: right;    width: 50px;    height: 50px;    margin-right: 20px;    color: tomato;    margin-top: 20px;                }                            </textarea>                            <br>                            <br>                            <p><strong>El html</strong></p>                            <textarea cols='30' rows='10'>                                <div class=''>                                    <a id='abrir' class='abrir-cerrar' href='javascript:void(0)' onclick='mostrar()'>                                        <img class='burger' src='{                    {url('/img/Partes/burger.png')                    }                }' alt='Image' />                                    </a>                                    <a id='cerrar' class='abrir-cerrar' href='#' onclick='ocultar()'>Cerrar menu</a>                                                                <div id='sidebar' class='sidebar scrol'>                                        <div class='columns'>                                            <a href='#' class='boton-cerrar' onclick='ocultar()'>&times;</a>                                        </div>                                        <br>                                        <br>                                        <br>                                        <br>                                        <div class='menu-g'>                                            <div class='columns'>                                                <div class='column menu-hover is-12-fullhd is-12-desktop  is-12-tablet  is-12-mobile '>                                                    <a href=''>                                                        <h1>CRM lite</h1>                                                    </a>                                                </div>                                                <div class='column is-12-fullhd is-12-desktop  is-12-tablet  is-12-mobile '>                                                    <a href='{                    { url('/home')                    }                }'>                                                        <h1>Explora</h1>                                                    </a>                                                </div>                                                <div class='column is-12-fullhd is-12-desktop  is-12-tablet  is-12-mobile '>                                                    <a href=''>                                                        <h1>Aplica</h1>                                                    </a>                                                </div>                                            </div>                                                                        <script>                                                document.getElementById('sidebar').style.width = '0';                                                // document.getElementById('contenido').style.marginLeft = '0';                                                document.getElementById('abrir').style.display = 'inline';                                                document.getElementById('cerrar').style.display = 'none';                                            </script>                                                                                                                            </div>                                    </div>                                </div>                             </textarea>                             <br>                             <br>                             <h1>guarda el icono</h1>                             <a href='../img/burger.png' target='_blank' download><img src='../img/burger.png' alt=''></a>                            </div>                    </section>"
                },
                "p17": {
                    "id": "17",
                    "name": "inputs",
                    "cont": "<h1>inputs</h1><section>    <div class='desc'>        <h4>Personalización de inputs</h4>        <br>        <p>Css</p>        <textarea cols='30' rows='10'>            input[type='radio'] {                -webkit-appearance: none;                background-color: rgba(241, 241, 241, 0.164);                height: 7px;                width: 7px;                border-radius: 50%;                }                                input[type='radio']:checked {                background-color: rgb(0, 0, 0);                border: 0px solid red;                }                                input[type='checkbox'] {                -webkit-appearance: none;                cursor: pointer;                height: 20px;                width: 20px;                background-color: white;                border-radius: 10%;                margin-right: 10px;                }                                input[type=checkbox]:checked:before {                content: '✔';                margin-left: 4px;                color: #409FA2;                }                                input[type='date'] {                -webkit-appearance: none;                font-size: 20px;                text-align: center;                }        </textarea>    </div></section>"
                },
                "p18": {
                    "id": "18",
                    "name": "Brillo",
                    "cont": "<h1>Brillo</h1><section>    <div class='desc'>        <h4>Brillo usando imagen</h4>        <p>Al objeto se le agrega un span vacío</p>        <textarea name='' id='' cols='30' rows='10'><a href='#' class='brillo'><img src='/logocss.png' alt='css'  /><span></span></a>        </textarea>        <p>Se crea el objeto que tendrá el Brillo, debe tener el overflow:hidden; y            position:relative</p>        <textarea name='' id='' cols='30' rows='10'>            .brillo{                position:relative;                display: block;                height: 133px;                width: 132px;                  text-decoration:none;                overflow:hidden;                }        </textarea>        <br>        <p>El span tambien debe tener position relative, será animado con una transición</p>        <textarea name='' id='' cols='30' rows='10'>            .hero-head:hover span{                background-position: 1000px 0px;                -webkit-transition-property: all;                -webkit-transition-duration: 1s;                transition-property: all;                transition-duration: 1s;                }        </textarea>        <h1>imagenes usadas:</h1>        <a href='../img/brillos/brillo.png'><img src='../img/brillos/brillo.png' alt=''></a>        <p>Otro tamaño</p>        <a href='../img/brillos/brillog.png'><img src='../img/brillos/brillog.png' alt=''></a>        <hr>        <h1>Referencia :  <a href='https: //mmteam.controldedominios.com/entradaBlog.asp?blog=3&cod=57'>https://mmteam.controldedominios.com/entradaBlog.asp?blog=3&cod=57</a></h1>    </div></section>"
                },
                "p19": {
                    "id": "19",
                    "name": "Movimientos",
                    "cont": "<h1>movimientos</h1>                    <section>                        <div class='desc'>                            <h4>Rotar</h4>                            <p> HTML                                Para mostrar el movimiento, en este ejemplo usaremos un lápiz.</p>                            <textarea name='' id='' cols='30' rows='10'>                                <div id='axis' class='six'>                                    <img class='object pencil rotate360cw' src='images/pencil.png' />                                </div>                         </textarea>                            <p> CSS                                Y rotaremos el objeto 360 grados en el sentido de las agujas del reloj.</p>                            <textarea name='' id='' cols='30' rows='10'>    #axis:hover .rotate360cw {        transform: rotate(360deg);        -webkit-transform: rotate(360deg);        -o-transform: rotate(360deg);        -moz-transform: rotate(360deg);                }</textarea>                            <hr>                            <h1>Movimientos en direccion multiple</h1>                            <textarea name='' id='' cols='30' rows='10'>                                #axis:hover .multiple {                                    transform: translate(350px,                    -350px) rotate(360deg);                                    -webkit-transform: translate(350px,                    -350px) rotate(360deg);                                    -o-transform: translate(350px,                    -350px) rotate(360deg);                                    -moz-transform: translate(350px,                    -350px) rotate(360deg);                }                            </textarea>                            <h1>Referencias <a href='https: //webdesign.tutsplus.com/es/articles/css3-transitions-and-transforms-from-scratch--webdesign-4975'>https://webdesign.tutsplus.com/es/articles/css3-transitions-and-transforms-from-scratch--webdesign-4975</a></h1>                        </div>                    </section>"
                },
                "p20": {
                    "id": "20",
                    "name": "Headers",
                    "cont": "<h1>headers</h1>                    <section>                        <div class='desc'>                            <h4>header con video, está en la página, pero lo destaco aquí para usarlo.</h4>                            <a href='https: //codepen.io/dudleystorey/pen/kkYawX'>enlace a la página</a>                            <hr>                            <p>Página con todos los headers</p>                            <a href='https: //www.creativosonline.org/blog/27-headers-y-footers-css-para-tu-blog-o-pagina-web.html'>Click aquí</a>                        </div>                    </section>"
                }
            }
        },
        {
            "id": "2",
            "tag": [
                "1,2,3,4"
            ],
            "name": "Jquery",
            "html": {
                "p1": {
                    "id": "1",
                    "name": "Introducción",
                    "cont": "<div class='img-principal'><img src='https://s3-us-west-2.amazonaws.com/devcodepro/media/tutorials/metodo-offset-jquery-t1.jpg' alt='logo css'></div><div class='hero'>                <div class='hero-head '>                    <span></span>                    <a href='https: //francobg1.github.io/in/'>                        <div class='titulo '>                            <h1 class=''>Mis notas</h1>                        </div>                    </a>                </div>                <div class='hero-body'>                            <div class='body'>                        <h1>Jquery</h1>                        <hr>                        <h2>Inicio</h2>                                <h3>La sintaxis básica es: <strong>$ ( selector ). acción ()</strong></h3>                                <h3>Ejemplos:</h3>                                <p>                            $(this).hide() - oculta el elemento actual. <br>                            $('p').hide() - oculta todos los elementos p . <br>                            $('.test').hide() - Oculta todos los elementos con class = 'test'. <br>                            $('#test').hide() - oculta el elemento con id = 'test'. <br>                        </p>                            </div>                                    <div class='body'>                        <h2>El evento Document Ready</h2>                        <p> Es posible que haya notado que todos los métodos jQuery en nuestros ejemplos están dentro de un                            evento                            de preparación de documentos:</p>                                <h3>                            $(document).ready(function(){ <br>                                    // jQuery methods go here... <br>                });</h3>                        <p> Esto es para evitar que el código jQuery se ejecute antes de que el documento termine de cargarse                            (esté                            listo).</p>                    </div>                                    <div class='body'>                        <h2>Modificar css</h2>                        <p>                            $('#quitar').css('display', 'none');                        </p>                        <h2>Remover y agregar clase</h2>                        <p>                            $('#quitar').removeClass('menu-abierto'); <br>                            $('#quitar').addClass('menu-abierto');                                </p>                                <h2>Jquery en funciones</h2>                        <p>function abrir(var1) { <br>                            $('#quitar').css('display', 'block'); <br>                }</p>                        <h2>Jquery en evento click</h2>                        <p> $('#quitar').click(function (event) {<br> <br>                            $('#quitar').css('display', 'none');<br>                            $('#quitar').removeClass('menu-abierto');<br>                            $('#qui').removeClass('opc');<br> <br>                });</p>                    </div>                            <br>                    <br>                    <br>                    <br>                </div>            </div>"
                },
                "p2": {
                    "id": "2",
                    "name": "Selectores",
                    "cont": "<div class='hero'><div class='hero-head '>    <span></span>    <a href='https: //francobg1.github.io/in/'>        <div class='titulo '>            <h1 class=''>Mis notas</h1>        </div>    </a></div><div class='hero-body'>    <div class='body'>        <h1>Selectores</h1>        <p>$('*') - selecciona todos los elementos</p>        <p>$(this) - selecciona el elemento de donde fué llamado</p>        <hr>        <p>$('p.intro') - selecciona la etiqueta <strong>p</strong> y luego la clase <strong>intro</strong></p>        <p>$('[href                ]') -selecciona todos los elementos href</p>        <p>$(':button') todos los elementos que contengan el <strong>type='button'</strong> </p>    </div>    <br>    <br>    <br>    <br></div></div>"
                },
                "p3": {
                    "id": "3",
                    "name": "Eventos click",
                    "cont": "<div class='body'>                <h1>Eventos click</h1>                <h2>Algunos eventos más utilizados.</h2>                <p>$ (documento) .ready () - <strong>ejecuta una función cuando el documento está completamente                        cargado</strong></p>                <p><strong>--o--</strong></p>                                <p>$('p').click(function(){ // <strong> ejecuta función al hacer click en el elemento elegido.</strong>                    <br>                    $(this).hide(); <br>                    });</p>                <p><strong>--o--</strong></p>                                <p>$('p').dblclick(function(){ // <strong>La función se ejecuta cuando el usuario hace doble clic en el                        elemento HTML</strong> <br>                    $(this).hide(); <br>                    });</p>                <p><strong>--o--</strong></p>                <p>mouseenter() cuando entra al elemento</p>                <p>mouseleave() cuando sale del elemento</p>                <p>hover() para combinar <strong>mouseenter()y mouseleave()</strong></p>                <p>blur() cuando pierda el foco</p>                                                </div>"
                },
                "p4": {
                    "id": "4",
                    "name": "Animaciones",
                    "cont": "<div class='body'>                <h1>Animaciones</h1>                <h2>El animate()método jQuery se utiliza para crear animaciones personalizadas.</h2>                <h3>EJ:</h3>                <p>$('button').click(function(){ <br>                    $('div').animate({left: '250px'}); <br>                    }); </p>                                <h3>Animando varias propiedades</h3>                <p>$('button').click(function(){ <br>                    $('div').animate({ <br>                    left: '250px', <br>                    opacity: '0.5', <br>                    height: '150px', <br>                    width: '150px' <br>                    }); <br>                    });</p>                                <h2>Animación en cola</h2>                <p><strong>Funciona animando una linea despues de otra</strong></p>                <p>$('button').click(function(){ <br>                    var div = $('div'); <br>                    div.animate({height: '300px', opacity: '0.4'}, 'slow'); <br>                    div.animate({width: '300px', opacity: '0.8'}, 'slow'); <br>                    div.animate({height: '100px', opacity: '0.4'}, 'slow'); <br>                    div.animate({width: '100px', opacity: '0.8'}, 'slow'); <br>                    });                </p>                                <h2>Consejos:</h2>                                <h3>Valores relativos en w3school</h3> <a                    href='https://www.w3schools.com/jquery/jquery_animate.asp'>https://www.w3schools.com/jquery/jquery_animate.asp</a>                <h3>Incluso puede especificar el valor de animación de una propiedad como ' show', ' hide' o ' toggle'                </h3>                                </div>"
                },
                "p5": {
                    "id": "5",
                    "name": "Valores",
                    "cont": "<div class='body'>                <h1>Valores</h1>                <p>métodos jQuery simples pero útiles para la manipulación de DOM</p>                <p><strong>text()</strong> - Establece o devuelve el contenido de texto de los elementos seleccionados                    <br>                    <strong>html()</strong> - Establece o devuelve el contenido de los elementos seleccionados (incluido                    el marcado HTML)                    <br>                    <strong>val()</strong> - Establece o devuelve el valor de los campos del formulario.</p>                                <p>Se puede visualizar el elemento con un <strong>alert('HTML: ' + $('#test').html());</strong></p>                </div>                                <div class='body'>                <h2>Set</h2>                <p><strong>$('#test1').text('Hello world!');</strong> el text, modifica el texto directamente del                    elemento <br>                    el <strong>html</strong> modifica o agrega estructura del html siendo ingresado dentro de las                    comillas: <br>                    $('#test2').html('<b>Hello world!</b>'); <br>                    y el <strong>val()</strong> modifica elementos de formulario                </p>                </div>                <div class='body'>                <h2>att</h2>                <h3>Modifican atributos en los elementos ej:</h3>                                <p>$('button').click(function(){ <br>                    $('#w3s').attr({ <br>                    'href' : 'https://www.w3schools.com/jquery/', <br>                    'title' : 'W3Schools jQuery Tutorial' <br>                    }); <br>                    });</p>                </div>                                <div class='body'>                <h1>add</h1>                <p>Agregar un elemento con jQuery </p>                <p><strong> var txt2 = $('< p>                            < /p>').text('Text.'); // Create with jQuery</strong></p>                <h3>Y con append se agrega al dom</h3>                <h2> $('body').append(txt1);</h2>                <p>Esto lo agrega al final del elemento.</p>                <p>append() - Inserta contenido al final de los elementos seleccionados <br>                    prepend() - Inserta contenido al comienzo de los elementos seleccionados<br>                    after() - Inserta contenido después de los elementos seleccionados<br>                    before() - Inserta contenido antes de los elementos seleccionados</p>                </div>                                <div class='body'>                <h1>Eliminar</h1>                <p>$('#div1').remove();</p>                                <p><strong>remove</strong>, elimina el elemento completo.</p>                <p>empty() sólo elimina los secundarios</p>                <p>ejemplo de código:</p>                <h2>$('p').remove('.test, .demo');</h2>                </div>"
                },
                "p6": {
                    "id": "6",
                    "name": "Modify css",
                    "cont": "<div class='body'>                <h1>modify css</h1>                                <p>addClass() - Agrega una o más clases a los elementos seleccionados <br>                    removeClass() - Elimina una o más clases de los elementos seleccionados <br>                    toggleClass() - Alterna entre agregar / eliminar clases de los elementos seleccionados <br>                    css() - Establece o devuelve el atributo de estilo.</p>                <p>Ej de código.</p>                <h2> $('h1, h2, p').removeClass('blue');</h2>                </div>                                <div class='body'>                <h1>css</h1>                <p>el sgte código devuelve el color del elemento.</p>                <h2>$('p').css('background-color');</h2>                <hr>                <p>modificar una propiedad css</p>                <h3>css('propertyname','value');</h3>                <p>Ej:</p>                <p>$('p').css('background-color', 'yellow');</p>                <h3>Varias propiedades</h3>                <p>$('p').css({'background-color': 'yellow', 'font-size': '200%'});</p>                                </div>                <div class='body'>                <h1>Dimensiones</h1>                <p>$('button').click(function(){ <br>                    $('#div1').width(500).height(500); <br>                    });</p>                <p>Este código modifica el alto y ancho de un div</p>                </div>"
                },
                "p7": {
                    "id": "7",
                    "name": "Ajax",
                    "cont": "<div class='body'>            <h1>Ajax</h1>            <h3>El siguiente código estará en un archivo cont.txt</h3>            <textarea name='' id='' cols='30' rows='10'>            <h2>jQuery and AJAX is FUN!!!</h2>            <p id='p1'>This is some text in a paragraph.</p>          </textarea>            <h2>Load</h2>            <p>se encargará de agregar el txt al div seleccionado</p>            <p>$('#div1').load('demo_test.txt');</p>            <h3>Agregar clase o id al elemento a cargar</h3>            <p>$('#div1').load('demo_test.txt <strong>#p1</strong> ');</p>            <h2>Callbacks</h2>                  </div>"
                },
                "p8": {
                    "id": "8",
                    "name": "Filtros",
                    "cont": "<div class='body'>                <h1>Filtros</h1>                <p>filtros con jquery</p>                <p>https://www.w3schools.com/jquery/jquery_filters.asp</p>                </div>                "
                }
            }
        },
        {
            "id": "3",
            "tag": [
                "1,2,3,4"
            ],
            "name": "Laravel",
            "html": {
                "p1": {
                    "id": "1",
                    "name": "Introducción",
                    "cont": "<div class='img-principal'><img src='https://ewm.swiss/application/files/9115/9228/7517/shutterstock_1119270824_2.jpg' alt='logo css'></div><div class='hero-body'>                <div class='hero-section rutas'>                    <h1 class='titulos'>Inicio</h1>                    <div class='s  '>                                                        <div class=' '><h1>¿Cómo instalar?</h1>                            <p>descarga xampp, al instalar sólo deja seleccionado <strong>mySql, php y apache.</strong> </p>                            <p>Luego instala composer. despues de instalado, ve al final de la página, en comandos utiles,                                dice los comandos para crear y ejecutar el proyecto y <strong>listo</strong>.</p>                                            <h1>Rutas</h1>                                            <div class='codigo'>                                <p>Route: :get('/rutaquequiera', function(){ <br>                                    //return view('welcome'); <br>                });</p>                            </div>                                            <p>en <strong>/rutaquequiera</strong> puede llamarse como sea, eso define el nombre de la ruta                                <br>                                lo que la define, es lo que está en la funcion anónima, return view <br>                                se puede poner: <br>                                <strong>return 'cualquier cosa';</strong> </p>                            <br>                        </div>                                        <div class=' '>                            <h1>pasar parametros</h1>                            <div class='codigo'>                                <p>Route: :get('/ruta/{id                }', function($id){ <br>                                    //return 'se ha pasado el parametro: ' . $id; <br>                });</p>                            </div>                            <p>solo se agrega entre <strong>{}</strong> el parametro y despues se pasa a la funcion</p>                            <p>así mismo, se pueden pasar varios parametros</p>                            <div class='codigo'>                                <p>Route: :get('/ruta/{id                }/{otro                }', function($id,$otro){ <br>                                    //return 'se ha pasado el parametro: ' . $id; <br>                });</p>                            </div>                                                                        </div>                        <div class=' '>                            <h1>Expresiones regulares</h1>                            <p>para agregar expresiones regulares basta con colocarlas al final y referirse al parametro</p>                            <div class='codigo'>                                <p>Route: :get('/ruta/{id                }', function($id){ <br>                                    //return 'se ha pasado el parametro: ' . $id; <br>                })->where('name','[a-zA-Z                ]+');</p>                            </div>                            <hr>                            <p>Las rutas, se encuentran en <strong>routes/web.php</strong> </p>                                        </div>                    </div>                </div>                <!--Section-->                                <div class='hero-section controladores     '>                    <h1 class='titulos'>Controladores</h1>                    <div class='s  '>                                                        <div class=' '>                            <h1>Están en <strong>app/http/Controllers</strong></h1>                            <p>Para agregar un controlador de forma manuel debe ser así:</p>                            <div class='codigo'>                                <p>namespace App/Http/Controllers <br>                                    <br>                                    class EjemploContro extends Controller; <br>                                    public function inicio(){<br><br>                                    return 'estás en el inicio del sitio'; <br>                } <br>            }                                </p>                            </div>                            <p>Se crea un archivo php en el directorio ya mencionado. <br>                                En este caso el ejemplo es para hacer un enrutamiento.</p>                        </div>                        <div class=' '>                            <h1>Continuando con el ejemplo...</h1>                            <p>El controlador se creó para enrutarlo. <br>                                En <strong>routes/web.php</strong> lo enrutamos así:</p>                            <div class='codigo'>                                <p>Route: :get('inicio','EjemploContro@inicio');</p>                            </div>                            <p>Indicamos el controlador y luego, separado de un <strong>@</strong>, <br>                                agregamos el metodo a ser usado</p>                            <h1>Parametros</h1>                            <p>el parametro se lo pasamos desde la url y el metodo debe estar preparado para recibir un                                parametro <br>                                ej: <strong>public sumar(parametro)</strong></p>                            <p>código ejemplo:</p>                            <div class='codigo'>                                <p>Route:get('/inicio/{num            }','Controlador@sumar');</p>                            </div>                        </div>                        <div class=' '>                            <h1>De forma automatica</h1>                            <div class='cmd'>                                <p>$php artisan make:controller ejemplo2</p>                            </div>                            <p>Lo creará en la carpeta <strong>Controllers.</strong></p>                            <hr>                            <p>para crear un controlador con recursos/metodos create, index,edit... etc</p>                            <div class='cmd'>$php artisan make:controller --resource Ejemplo3</div>                            <p>Llegar y utilizar/agregar returns</p>                        </div>                    </div>                </div>                                <!--CONTENT-->                <div class='hero-section controladores     '>                    <h1 class='titulos'>Controladores con resources</h1>                    <div class='s  '>                        <div class=' is-4-fullhd is-12-desktop  is-12-tablet  is-12-mobile is-gapless  is-multiline'>                            <h1>Otra forma</h1>                            <p>En <strong>routes</strong></p>                            <div class='codigo'>                                <p>Route: :resource('posts','controladorEjemplo');</p>                            </div>                            <p>primero creamos el name y despues agregamos el metodo a cuál entrar.</p>                            <p>Para los que tengan parametros, consultar la lista de rutas:</p>                            <div class='cmd'>                                <p>$php artisan route:list</p>                            </div>                            <!--CONTENT-->                        </div>                        <div class=' '>                            CONTENT                        </div>                        <div class=' '>                            CONTENT                        </div>                    </div>                </div>                                                                <div class='hero-section vistas     '>                    <h1 class='titulos'>Vistas</h1>                    <div class='s  '>                        <div class=' '>                            <p>Las vistas se encuentran en <strong>resources/views</strong> </p>                            <p>Para apuntar al controlador se usa <br>                                <strong>return view('paginaOvista')</strong></p>                                                                        </div>                        <div class=' '>                            <p>Para comenzar, se puede crear un controlador para las vistas con metodos que apunten a las                                vistas <br>                                ej:</p>                            <div class='codigo'>                                <p>public function foro(){ <br>                                    return view('foro'); <br>            }</p>                            </div>                            <p>y en <strong>routes</strong> agregamos</p>                            <div class='codigo'>                                <p>Route:get('/foro/{opcional            }','Controlador@foro');</p>                            </div>                        </div>                        <div class=' '>                            <h1>Usar archivos</h1>                            <p>Podemos apoyarnos de las llaves:</p>                            <p>{                { asset('css/bulma.min.css')                }            }</p>                            <div class='codigo'>                                <p>link href='{                { asset('css/styles.css')                }            }' rel='stylesheet'></p>                                <p>script type='text/javascript' src='{                { asset('js/scripts.js')                }            }'></script>                                </p>                                <p class='nota'>nota:se borró el 'menor qué' para no afectar al código.</p>                            </div>                            <h1>Usar imagenes</h1>                            <div class='codigo'>                                <p> img src='{                {url('/img/Partes/Logo Explora by Eglobal One.png')                }            }' alt='Image'/></p>                            </div>                        </div>                                    </div>                </div>                                <div class='hero-section blade     '>                    <h1 class='titulos'>Blade</h1>                    <div class='s  '>                        <div class=' '>                            <p>Al crear la plantilla en <strong>views</strong> la extención debe llevar <br> la extención                                <strong>blade.php</strong></p>                            <h1>identificar la zona</h1>                            <p>se coloca <strong>@yield('identificacion1')</strong> en una seccion de la plantilla para                                desplegar ahí la seccion creada</p>                            <h1>Crear la plantilla</h1>                            <p>para enviar los datos <strong>@extends(layouts.nameArchivo)</strong></p>                            <h1>Crear la sección</h1>                            <div class='codigo'>                                <p>@section('identificacion1') <br>                                    codigo <br>                                    @endsection</p>                            </div>                            <p>El código a ser usado en la plantilla principal, debera ser encerrado en las etiquetas                                <strong>@section</strong></p>                        </div>                        <div class=' '>                            <h1>@if - @endif</h1>                            <p>Usar condicionales</p>                            <div class='codigo'>                                <p>@if(count($alumnos)) <br>                                    <span class='nota'>codigo si es que hay alumnos</span> <br>                                    @else <br>                                    <span class='nota'> codigo por si las moscas</span> <br>                                    @endif                                </p>                            </div>                            <p>se usó <strong>count</strong> para saber si hay datos en el array $alumnos que se pasó por                                parametros</p>                            <h1>foreach</h1>                            <p>para recorrer arreglos:</p>                            <div class='codigo'>                                <p>                                    @foreach($alumnos as $persona) <br>                                    codigo <br>                                    @endforeach                                </p>                            </div>                            <p>Esto repetira el código que se ponga dentro N veces</p>                                                        </div>                        <div class=' '>                            <h1>Utilizar variables</h1>                            <div class='codigo'>{                {$persona                }            }</div>                            <p>en vez de utilizar echo, podemos utilizar llaves dobles.</p>                                            <h1>@if con rutas</h1>                            <p>para comprobar la ruta</p>                            <div class='codigo'>                                @if(Route: :current()->getName() != 'post')                            </div>                        </div>                                    </div>                </div>                                                                                <div class='hero-section'>                    <div class='comandos'>                        <h1>(text)comandos utiles</h1>                        <p class='nota'>Para crear el proyecto</p>                        <p>$composer create-project laravel/laravel mi-proyecto-laravel</p>                                        <p class='nota'>Para desplegar</p>                        <p>$php artisan serve</p>                                        <p class='nota'>---------------</p>                        <p class='nota'>lista de rutas</p>                        <p>$php artisan route:list</p>                                        <p class='nota'>crear controladores con o sin recursos</p>                        <p>$php artisan make:controller ejemplo2</p>                        <p>$php artisan make:controller --resource Ejemplo3</p>                    </div>                    <div class='foot-pag centrar-texto'>                        <div>                            <p>Páginas de estudio | Franco Bernal <br></p>                            <p class='nota'>25/08/2020</p>                        </div>                                    </div>                                </div>                                                                                                <!--hero body-->                </div>"
                }
            }
        },
        {
            "id": "4",
            "tag": [
                "1,2,3,4"
            ],
            "name": "Svelte",
            "html": {
                "p1": {
                    "id": "1",
                    "name": "Introducción",
                    "cont": "<div class='img-principal'><img src='https://miro.medium.com/max/3840/1*oHCbzzQSSmDF9icaxCk3iw.jpeg' alt='logo css'></div><div class='hero'>                <div class='hero-head '>                    <span></span>                    <a href='https: //francobg1.github.io/in/'>                        <div class='titulo '>                            <h1 class=''>Mis notas</h1>                        </div>                    </a>                </div>                <div class='hero-body'>                            <div class='body'>                        <h1>svelte</h1>                        <p>Se puede usar {example                } para usar una variable</p>                        <textarea name='' id='' cols='25' rows='4'>        <script>            let name = 'world';        </script>        <h1>Hello {name                }</h1>                        </textarea>                        <p>Salida: hello world</p>                                <h2>Se puede usar src con variable</h2>                        <textarea name='' id='' cols='40' rows='5'>        <script>            let src = 'tutorial/image.gif';            let name = 'Rick Astley';        </script>        <img {src                } alt='{name                } dances.'>        </textarea>                    </div>                                    <div class='body'>                        <h3>importes</h3>                        <p>se puede usar otro html stelve importandolo con javascript y después utilizarlo con                            < example />                        </p>                        <textarea name='' id='' cols='40' rows='4'>        <script>            import Nested from './Nested.svelte';        </script>                        </textarea>                        <h2>Los estilos css no se filtrarán entre archivos, cada uno mantiene su estilo</h2>                        <h1>exportar</h1>                        <p>desde otro archivo .svelte</p>                        <textarea name='' id='' cols='30' rows='3'>                            <script>                                export let answer;                            </script>                        </textarea>                    </div>                                    <div class='body'>                        <h1>mostrar html</h1>                        <p>el{@html example                } mostrará el html que contiene la variable example </p>                        <h1>eventos</h1>                        <p>formas de llamar un evento</p>                        <p>se usa la on: directiva para crear un evento</p>                        <textarea name='' id='' cols='40' rows='6'>        <button on:click={handleClick                }></button>                <div on:mousemove={handleMousemove                }>            The mouse position is {m.x                } x {m.y                }        </div>                        </textarea>                                            </div>                    <div class='body'>                        <h1>valores reactivos</h1>                        <textarea name='' id='' cols='40' rows='1'>        $: console.log(`the count is ${count                }`);                        </textarea>                        <p>ejecuta nuevamente cada vez que el valor cambia gracias a <strong>$:</strong></p>                        <p>se usa en cualquier parte</p>                        <textarea name='' id='' cols='40' rows='4'>        $: {            console.log(`the count is ${count                    }`);            alert(`I SAID THE COUNT IS ${count                    }`);                }                    </textarea>                        <p>otro ejemplo</p>                        <textarea name='' id='' cols='40' rows='4'>        $: if (count >= 10) {            alert(`count is dangerously high!`);            count = 9;                }                    </textarea>                    </div>                            <div class='body'>                        <h1>Condicionales</h1>                        <textarea name='' id='' cols='30' rows='10'>        {#if user.loggedIn                }            <button on:click={toggle                }>                Log out            </button>        {                    :else                }            <button on:click={toggle                }>                Log in            </button>        {/if                }                        </textarea>                        <a href='https: //svelte.dev/tutorial/else-if-blocks'>ENLACE:ELSE IF</a>                                <h2>recorrer listas</h2>                        <textarea name='' id='' cols='30' rows='10'>        {#each cats as cat                }        <li><a target='_blank' href='https: //www.youtube.com/watch?v={cat.id}'> {cat.name                }        </a></li>        {/each                }                        </textarea>                        <a href='https: //svelte.dev/tutorial/each-blocks'>enlace</a>                    </div>                    <div class='body'>                        <h1>No estudiados</h1>                        <p></p><a href='https: //svelte.dev/tutorial/spread-props'>-distribuir a travez de variables,                            exportar</a></p>                                <h1>Manejo de listas</h1>                        <a href='https: //svelte.dev/tutorial/keyed-each-blocks'>Enlace</a>                        <h2>promesas</h2>                        <a href='https: //svelte.dev/tutorial/await-blocks'>-Promesas</a>                    </div>                    <br>                    <br>                    <br>                    <br>                </div>            </div>        "
                },
                "p2": {
                    "id": "2",
                    "name": "instalación",
                    "cont": "                    <h1>Installación</h1>                    <p>Comando para descargar el template</p>                    <div class='cmd'>                        <p>npx degit sveltejs/template search-movies</p>                    </div>                    <h4>Instalar dependencias</h4>                    <div class='cmd'>                        <p>cd search-movies</p>                        <p>npm install</p>                    </div>                                    <h4>Ejecutar</h4>                    <div class='cmd'>                        <p>npm run dev</p>                    </div>                                    <h1>Principales</h1>                    <h4>main.js</h4>                    <p>el archivo main.js es el punto de entrada, donde se define el componente App.svelte que será lo que se muestra.                    </p>                                    <p>El props, son los parametros que se pasan al App.svelte para ser usados ahí.</p>                    <h4>App.svelte</h4>                    <p>Contiene lo que se va a mostrar al usuario.</p>                    <p>Script, contiene el export let name; que se pasó como parametro desde main.js</p>                    <p>Y se usó dentro del html como {name                    } </p>                    <div class='codigo'>                        <p>Hello {name                    }!</p>                    </div>                "
                }
            }
        },
        {
            "id": "5",
            "tag": [
                "1,2,3,4"
            ],
            "name": "Códigos",
            "html": {
                "p1": {
                    "id": "1",
                    "name": "Maquetado",
                    "cont": "<div class='hero-section'>                    <h1>Plantilla html con bulma</h1>                    <p>bulma activado solo con cdn</p>                    <!--TEXTAREA-->                    <!--TEXTAREA-->                    <!--TEXTAREA-->                    <!--TEXTAREA-->                    <textarea disabled cols='30' rows='10'>                        <!DOCTYPE html>                        <html>                                                <head>                            <meta charset='UTF-8'>                            <meta name='viewport' content='width=device-width, initial-scale=1.0'>                            <link rel='stylesheet' href='https: //cdnjs.cloudflare.com/ajax/libs/bulma/0.6.2/css/bulma.min.css'>                            <title>parte0</title>                            <link rel='stylesheet' href='../css/index.css'>                        </head>                                                <body>                            <div class='hero'>                                <div class='hero-body'>                                        <div class='hero-section'>                                               <!--contenido-->                                                   <!--contenido-->                                                      <!--contenido-->                                         </div>                                </div>                            </div>                                                                        </body>                                                        </html>                                            </textarea>                    <!--TEXTAREA-->                    <!--TEXTAREA-->                    <!--TEXTAREA-->                    <hr>                    <h1>Plantilla Css modificando bullma</h1>                    <!--TEXTAREA-->                                        <textarea disabled cols='30' rows='10'>                        html {}                                                body {                        /*                             padding-top: 10px;                            padding-left: 10px;                            padding-right: 10px;                            padding-bottom: 20px;                            */                            padding: 0px;                            margin: 0px;                    }                                                .hero {                            height: 100%;                            width: 100%;                    }                                                .hero-head {}                                                .hero-body {                            height: auto;                            width: 100%;                            padding: 0px;                    }                                                .columns {                            padding: 0px;                            margin: 0px;                            height: auto;                            width: auto;                    }                                                .column {                            padding: 0px;                            margin: 0px;                            height: auto;                    }                                                .hero-section {                            width: auto;                            height: auto;                            background-color: seagreen;                    }                                                .centrar {                            display: block;                            margin-left: auto;                            margin-right: auto;                    }                                                .centrar-full {                            display: flex;                            align-items: center;                            justify-content: center;                    }                                                .m {                            border: 3px solid red;                    }                    </textarea>                    <!--TEXTAREA-->                    <hr>                                        <h1>tamaños de mediaquery´s @media </h1>                    <textarea disabled cols='30' rows='10'>                                        @media (max-width: 768px) {}                    /*/ Tablets en horizonal y escritorios normales                    ------------------------------------------------------------------------- /*/                                        @media (max-width: 1024px) {}                    /*/ Escritorios muy anchos                    Otros   ------------------------------------------------------------------------- */                                        @media (max-width: 1200px) {}                    @media (max-width: 1300px) {}                    @media(max-width: 370px) {}                    </textarea>                                        <hr>                    <h1>Columns</h1>                    <textarea name='' id='' cols='30' rows='10'>                    <div class='columns is-gapless  is-multiline'>                    <div class='column letras  is-10-fullhd is-10-desktop  is-12-tablet  is-12-mobile '>                                          </div>                    <div class='column naveg is-2-fullhd is-2-desktop  is-12-tablet  is-12-mobile '>                                          </div>                    </div>                    </textarea>                                                            <hr>                    <hr>                    <h1>Notas de diseño</h1>                    <p>para posicionar un objeto absolute dentro de un div <br>                        es necesario que el div padre esté en position:relative;                        así se puede posicionar con left: 0 por ejemplo. </p>                    <p>para centrar con absolute sólo se necesita que tenga</p>                    <textarea name='' id='' cols='30' rows='10'>                    position: absolute;                    right: 0;                    left: 0;                    bottom: 0;                    margin: auto;                    </textarea>                    <p>y otra forma es con flex</p>                    <textarea name='' id='' cols='30' rows='10'>                    display: flex;                    align-items: center;                    justify-content: center;                    </textarea>                    <p>La forma más simple</p>                    <textarea name='' id='' cols='30' rows='10'>                    display: block;                    margin-left: auto;                    margin-right: auto;                    </textarea>                    <p>acortado margin: 0 auto;</p>                    </div>"
                }
            }
        }
    ]
}